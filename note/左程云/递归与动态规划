1.1 斐波那契
#include<iostream>
using namespace std;

int fun(int n) {
	if (n < 1)
		return 0;
	if (n == 1 || n == 2)
		return 1;

	int res = 1;
	int pre = 1;
	int temp = 0;
	for (int i = 3; i <= n; ++i) {
		temp = res;
		res = res + pre;
		pre = temp;
	}
	return res;
}

int main() {
	int n;
	while (cin >> n) {
		cout<<fun(n)<<endl;
	}
}

1.2 爬台阶
#include<iostream>
using namespace std;

int fun(int n) {
	if (n < 1)
		return 0;
	if (n == 1 || n == 2)
		return 1;

	int res = 2;
	int pre = 1;
	int temp = 0;
	for (int i = 3; i <= n; ++i) {
		temp = res; 
		res = res + pre;
		pre = temp;
	}
	return res;
}

int main() {
	int n;
	while (cin >> n) {
		cout<<fun(n)<<endl;
	}
}

1.3 母牛
#include<iostream>
using namespace std;

int fun(int n) {
	if (n < 1)
		return 0;
	if (n == 1 || n == 2|| n == 3)
		return n;

	int res = 3;
	int pre = 2;
	int pre1 = 1;
	int temp = 0;
	int temp1 = 0;
	for (int i = 4; i <= n; ++i) {
		temp = res;
		temp1 = pre;
		res = res + pre1;
		pre = temp;
		pre1 = temp1;
	}
	return res;
}

int main() {
	int n;
	while (cin >> n) {
		cout<<fun(n)<<endl;
	}
}

2.1 矩阵最短路径和

