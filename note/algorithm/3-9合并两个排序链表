#include <iostream>
using namespace std;

struct Node {
	int value;
	Node* next;
};

Node* Merge(Node* head1, Node* head2) {
	if (head1 == NULL)
		return head2;
	else if (head2 == NULL)
		return head1;

	Node* head = NULL;
	if (head1->value < head2->value) {
		head = head1;
		head->next = Merge(head1->next, head2);
	}
	else {
		head = head2;
		head->next = Merge(head1, head2->next);
	}

	return head;
}
void PrintList(Node* head) {
	Node* p = head;
	while (p->next != NULL) {
		cout << p->value << " ";
		p = p->next;
	}
	cout << p->value << endl;
}
void test() {
	Node* p = (Node*)malloc(sizeof(Node));
	p->value = 1;
	Node* head1 = p;
	for (int i = 3; i <= 10; i = i + 2) {
		Node* tem= (Node*)malloc(sizeof(Node));
		tem->value = i;
		p->next = tem;
		p = tem;
	}
	p->next = NULL;
	PrintList(head1);

	Node* q = (Node*)malloc(sizeof(Node*));
	Node* head2 = q;
	q->value = 2;
	for (int i = 4; i <= 10; i = i + 2) {
		Node* tem = (Node*)malloc(sizeof(Node));
		tem->value = i;
		q->next = tem;
		q = tem;
	}
	q->next = NULL;
	PrintList(head2);

	Node* head = Merge(head1, head2);
	PrintList(head);
}

int main() {
	test();

	return 0;
}
